import{_ as e,c as t,o as a,a1 as i}from"./chunks/framework.DAO6A6yB.js";const m=JSON.parse('{"title":"Contributing","description":"","frontmatter":{},"headers":[],"relativePath":"about/contributing.md","filePath":"about/contributing.md"}'),o={name:"about/contributing.md"},s=i('<h1 id="contributing" tabindex="-1">Contributing <a class="header-anchor" href="#contributing" aria-label="Permalink to &quot;Contributing&quot;">‚Äã</a></h1><h2 id="submission-guidelines" tabindex="-1">Submission guidelines <a class="header-anchor" href="#submission-guidelines" aria-label="Permalink to &quot;Submission guidelines&quot;">‚Äã</a></h2><p>Contributions are always welcome!</p><p>Contributions are what make the open source community such an amazing place to learn, inspire, and create. Any contributions you make are <strong>greatly appreciated</strong>.</p><p>If you have a suggestion that would make this better, please fork the repo and create a pull request. You can also simply open an issue with the tag &quot;enhancement&quot;. Don&#39;t forget to give the project a star! Thanks again!</p><ol><li><p>Fork it! ü§ô</p></li><li><p>Create your feature branch: <code>git checkout -b my-new-feature</code></p></li><li><p>Commit your changes: <code>git commit -m &quot;Add some feature&quot;</code></p></li><li><p>Push to the branch: <code>git push origin my-new-feature</code></p></li><li><p>Submit a pull request üëç</p></li></ol><h2 id="commit-message-guidelines" tabindex="-1">Commit message guidelines <a class="header-anchor" href="#commit-message-guidelines" aria-label="Permalink to &quot;Commit message guidelines&quot;">‚Äã</a></h2><p>We follow the <a href="https://www.conventionalcommits.org/en/v1.0.0-beta.3/" target="_blank" rel="noreferrer">Conventional commits specifications</a> which provides a set of rules to make commit messages more readable when looking through the project history. But also, we use the git commit messages to generate the change log.</p><h3 id="commit-message-format" tabindex="-1">Commit message format <a class="header-anchor" href="#commit-message-format" aria-label="Permalink to &quot;Commit message format&quot;">‚Äã</a></h3><p>The commit message should be structured as follows:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>&lt;type&gt;: &lt;subject&gt; [optional `breaking`]</span></span></code></pre></div><p>Where <code>type</code> must be one of the following:</p><ul><li><code>build</code>: changes that affect the build system (external dependencies)</li><li><code>ci</code>: changes to our CI configuration files and scripts</li><li><code>chore</code>: changes that affect the project structure</li><li><code>docs</code>: changes that affect the documentation only</li><li><code>feat</code>: a new feature</li><li><code>fix</code>: a bug fix</li><li><code>perf</code>: a code change that improves performance</li><li><code>refactor</code>: a code change that neither fixes a bug nor adds a feature</li><li><code>revert</code>: revert changes</li><li><code>style</code>: changes that do not affect the meaning of the code (lint issues)</li><li><code>test</code>: adding missing tests or correcting existing tests</li></ul><p>Use the optional <code>[ breaking ]</code> keyword to declare a <strong>BREAKING CHANGE</strong>.</p><h3 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">‚Äã</a></h3><ul><li>Commit message with description and breaking change in body</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>feat: allow provided config object to extend other configs [ breaking ]</span></span></code></pre></div><ul><li>Commit message with no body</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>docs: correct spelling in the contributing.md file</span></span></code></pre></div><ul><li>Commit message for a fix using an issue number.</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>fix: fix minor issue in code (#12)</span></span></code></pre></div>',21),n=[s];function c(l,r,d,u,h,p){return a(),t("div",null,n)}const b=e(o,[["render",c]]);export{m as __pageData,b as default};
