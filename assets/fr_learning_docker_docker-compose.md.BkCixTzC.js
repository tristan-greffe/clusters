import{_ as e,c as t,o,a1 as r,a2 as s}from"./chunks/framework.CgL1aY5S.js";const _=JSON.parse('{"title":"Docker Compose","description":"","frontmatter":{},"headers":[],"relativePath":"fr/learning/docker/docker-compose.md","filePath":"fr/learning/docker/docker-compose.md"}'),d={name:"fr/learning/docker/docker-compose.md"},c=r('<h1 id="docker-compose" tabindex="-1">Docker Compose <a class="header-anchor" href="#docker-compose" aria-label="Permalink to &quot;Docker Compose&quot;">​</a></h1><p><a href="https://docs.docker.com/compose/" target="_blank" rel="noreferrer">Docker Compose</a> permet de <strong>lancer un ensemble de conteneurs Docker</strong> en même temps. Il est utile pour les applications nécessitant plusieurs conteneurs.</p><p><img src="'+s+'" alt="docker-compose"></p><h2 id="instructions-docker-compose-yml" tabindex="-1">Instructions <code>docker-compose.yml</code> <a class="header-anchor" href="#instructions-docker-compose-yml" aria-label="Permalink to &quot;Instructions `docker-compose.yml`&quot;">​</a></h2><table><thead><tr><th>Instruction</th><th>Description</th></tr></thead><tbody><tr><td><code>version</code></td><td>Indique la version de Docker Compose utilisée</td></tr><tr><td><code>services</code></td><td>Définit les différents conteneurs de l&#39;application</td></tr><tr><td><code>networks</code></td><td>Définit comment les services communiquent entre eux</td></tr><tr><td><code>volumes</code></td><td>Spécifie les volumes montés dans les conteneurs</td></tr><tr><td><code>configs</code></td><td>Gère les configurations injectées dans les conteneurs</td></tr><tr><td><code>secrets</code></td><td>Gère les secrets injectés dans les conteneurs</td></tr><tr><td><code>variables d&#39;environnement</code></td><td>Permet de définir des variables pour configurer le comportement des applications</td></tr></tbody></table><h2 id="commandes-essentielles" tabindex="-1">Commandes essentielles <a class="header-anchor" href="#commandes-essentielles" aria-label="Permalink to &quot;Commandes essentielles&quot;">​</a></h2><table><thead><tr><th>Commande</th><th>Description</th></tr></thead><tbody><tr><td><code>docker-compose up</code></td><td>Déployer l&#39;application</td></tr><tr><td><code>docker-compose down</code></td><td>Arrêter les services et conteneurs</td></tr><tr><td><code>docker-compose restart</code></td><td>Redémarrer les services</td></tr><tr><td><code>docker-compose ps</code></td><td>Afficher les informations sur les conteneurs</td></tr><tr><td><code>docker-compose up --scale web=3</code></td><td>Mettre à l&#39;échelle un service</td></tr><tr><td><code>docker-compose logs &lt;service&gt;</code></td><td>Obtenir les logs d&#39;un service</td></tr></tbody></table>',7),n=[c];function a(i,l,m,p,u,h){return o(),t("div",null,n)}const f=e(d,[["render",a]]);export{_ as __pageData,f as default};
