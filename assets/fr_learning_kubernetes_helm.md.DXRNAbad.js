import{_ as t,D as a,c as i,j as e,I as r,a as n,a1 as l,o as d,ad as o,ae as h,af as p,ag as c}from"./chunks/framework.CgL1aY5S.js";const _=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"fr/learning/kubernetes/helm.md","filePath":"fr/learning/kubernetes/helm.md"}'),u={name:"fr/learning/kubernetes/helm.md"},m={id:"",tabindex:"-1"},k=e("a",{class:"header-anchor",href:"#","aria-label":`Permalink to "<KubernetesIcon icon='/clusters/learning/kubernetes/icons/helm.svg' label='Helm' :width='45' :height='45' />"`},"​",-1),g=l('<p><strong><a href="https://helm.sh/" target="_blank" rel="noreferrer">Helm</a> est un gestionnaire de packages pour Kubernetes</strong>, développé sous l&#39;égide de la <a href="https://www.cncf.io/" target="_blank" rel="noreferrer">Cloud Native Computing Foundation (CNCF)</a>. Il simplifie la gestion des applications Kubernetes en permettant de décrire, installer, mettre à jour, et gérer ces applications via des packages appelés &quot;charts&quot;.</p><h2 id="versions-de-helm" tabindex="-1">Versions de Helm <a class="header-anchor" href="#versions-de-helm" aria-label="Permalink to &quot;Versions de Helm&quot;">​</a></h2><h3 id="helm-2" tabindex="-1">Helm 2 <a class="header-anchor" href="#helm-2" aria-label="Permalink to &quot;Helm 2&quot;">​</a></h3><p>Helm 2 repose sur une architecture client-serveur.</p><p><img src="'+o+'" alt="helm2-cli"></p><ul><li><strong>Tiller Server</strong> : Le composant serveur, nommé <strong>Tiller</strong>, est déployé dans le cluster Kubernetes et communique avec l&#39;API Kubernetes pour gérer les ressources.</li><li><strong>Client Helm</strong> : L&#39;interface en ligne de commande (CLI) qui interagit avec Tiller pour installer, mettre à jour ou supprimer des charts.</li></ul><h3 id="helm-3" tabindex="-1">Helm 3 <a class="header-anchor" href="#helm-3" aria-label="Permalink to &quot;Helm 3&quot;">​</a></h3><p>Helm 3 a simplifié l&#39;architecture en supprimant Tiller, rendant ainsi Helm plus <strong>sécurisé</strong> et direct. <strong>Le client interagit désormais directement avec l&#39;API Kubernetes</strong> sans intermédiaire.</p><p><img src="'+h+`" alt="helm-cli"></p><h2 id="concepts-de-base" tabindex="-1">Concepts de base <a class="header-anchor" href="#concepts-de-base" aria-label="Permalink to &quot;Concepts de base&quot;">​</a></h2><h3 id="les-charts" tabindex="-1">Les charts <a class="header-anchor" href="#les-charts" aria-label="Permalink to &quot;Les charts&quot;">​</a></h3><p>Un chart est un package Helm qui contient toutes les ressources nécessaires pour déployer une application Kubernetes. Il est organisé selon une structure de répertoires spécifique :</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">my-chart</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">├──.helmignore</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Chart.yaml</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> charts</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> templates</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> NOTES.txt</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> _helpers.tpl</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> deployment.yaml</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hpa.yaml</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ingress.yaml</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> service.yaml</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> serviceaccount.yaml</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   └──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tests</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">       └──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test-connection.yaml</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">└──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> values.yaml</span></span></code></pre></div><table><thead><tr><th>Fichier/Répertoire</th><th>Description</th></tr></thead><tbody><tr><td><strong>.helmignore</strong></td><td>Liste les fichiers à ignorer lors de la création du chart, similaire à <code>.gitignore</code></td></tr><tr><td><strong>Chart.yaml</strong></td><td>Contient des métadonnées sur le chart (nom, version, description)</td></tr><tr><td><strong>values.yaml</strong></td><td>Définit les valeurs par défaut pour les templates YAML</td></tr><tr><td><strong>charts/</strong></td><td>Répertoire pour inclure des charts dépendants</td></tr><tr><td><strong>templates/</strong></td><td>Contient les fichiers manifestes Kubernetes et les templates</td></tr><tr><td><strong>templates/NOTES.txt</strong></td><td>Message affiché après le déploiement du chart</td></tr><tr><td><strong>templates/_helpers.tpl</strong></td><td>Contient des sous-modèles réutilisables pour les templates</td></tr><tr><td><strong>templates/tests/:</strong></td><td>Contient les tests pour valider le bon fonctionnement du chart</td></tr></tbody></table><p>Un cas concret d’utilisation pourrait être la gestion de plusieurs environnements (Dev, Staging, Prod) dans un cluster Kubernetes. Chaque environnement peut avoir des paramètres différents tout en utilisant un seul chart.</p><p><img src="`+p+'" alt="helm-chart"></p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>À un niveau élevé, les charts Helm réduisent la complexité et la duplication des configurations pour différents environnements (Dev, Staging, Prod) en centralisant les templates dans un seul chart.</p></div><h3 id="releases" tabindex="-1">Releases <a class="header-anchor" href="#releases" aria-label="Permalink to &quot;Releases&quot;">​</a></h3><p>Une r<strong>elease est une instance déployée d&#39;un chart avec une configuration spécifique</strong>. Helm stocke les releases dans des secrets Kubernetes à partir de Helm 3.</p><h3 id="repositories" tabindex="-1">Repositories <a class="header-anchor" href="#repositories" aria-label="Permalink to &quot;Repositories&quot;">​</a></h3><p>Les <strong>repositories Helm sont des collections de charts</strong>. Ils permettent de partager et de distribuer des charts via des archives. Le <a href="https://artifacthub.io/" target="_blank" rel="noreferrer">Artifact Hub</a> est un référentiel communautaire, mais on peut également créer des référentiels privés.</p><h2 id="les-templates" tabindex="-1">Les templates <a class="header-anchor" href="#les-templates" aria-label="Permalink to &quot;Les templates&quot;">​</a></h2><p>Les <strong>templates permettent de créer des fichiers manifestes dynamiques</strong> en utilisant le langage de template Go.</p><h3 id="les-principaux-objets" tabindex="-1">Les principaux objets <a class="header-anchor" href="#les-principaux-objets" aria-label="Permalink to &quot;Les principaux objets&quot;">​</a></h3><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{{</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.Object.Parameter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }}</span></span></code></pre></div><table><thead><tr><th>Object</th><th>Description</th></tr></thead><tbody><tr><td><strong>Release</strong></td><td>Utilisé pour accéder au nom de la release ou à d&#39;autres informations dynamiques liées à la release</td></tr><tr><td><strong>chart</strong></td><td>Permet d&#39;accéder aux valeurs définies dans <code>Chart.yaml</code></td></tr><tr><td><strong>Values</strong></td><td>Accède aux paramètres définis dans <code>values.yaml</code></td></tr></tbody></table><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Pour en savoir plus sur les objets pris en charge: la <a href="https://helm.sh/docs/chart_template_guide/builtin_objects/" target="_blank" rel="noreferrer">documentation</a></p></div><h3 id="exemple" tabindex="-1">Exemple <a class="header-anchor" href="#exemple" aria-label="Permalink to &quot;Exemple&quot;">​</a></h3><p><img src="'+c+`" alt="helm-template"></p><table><thead><tr><th>Element</th><th>Description</th></tr></thead><tbody><tr><td><strong>.Release.Name</strong></td><td>Le nom de la release cours</td></tr><tr><td><strong>.Values.service.type</strong></td><td>Le type de service défini dans <code>values.yaml</code></td></tr><tr><td><strong>.Values.service.port</strong></td><td>Le port du service défini dans <code>values.yaml</code></td></tr></tbody></table><h2 id="gestion-des-valeurs" tabindex="-1">Gestion des valeurs <a class="header-anchor" href="#gestion-des-valeurs" aria-label="Permalink to &quot;Gestion des valeurs&quot;">​</a></h2><p>Les <strong>valeurs sont utilisées pour personnaliser les installations de chart</strong>. Elles peuvent être définies dans <code>values.yaml</code> ou passées en ligne de commande.</p><p><strong>Exemple d&#39;un fichier <code>values.yaml</code> :</strong></p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">replicaCount</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  repository</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">nginx</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  tag</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">stable</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">service</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">LoadBalancer</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">80</span></span></code></pre></div><table><thead><tr><th>Attribut</th><th>Description</th></tr></thead><tbody><tr><td><strong>replicaCount</strong></td><td>Nombre de réplicas pour le déploiement</td></tr><tr><td><strong>image.repository</strong></td><td>Nom de l&#39;image Docker à utiliser</td></tr><tr><td><strong>image.tag</strong></td><td>Tag de l&#39;image Docker</td></tr><tr><td><strong>service.type</strong></td><td>Type de service Kubernetes (ClusterIP, NodePort, LoadBalancer)</td></tr><tr><td><strong>service.port</strong></td><td>Port sur lequel le service sera exposé</td></tr></tbody></table><div class="tip custom-block"><p class="custom-block-title">Personnaliser les valeurs d&#39;un chart</p><p>Pour appliquer un fichier <code>values.yaml</code> personnalisé lors de l&#39;installation d&#39;un chart :</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">helm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-release</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> stable/nginx</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> custom-values.yaml</span></span></code></pre></div></div><h2 id="commandes-helm" tabindex="-1">Commandes Helm <a class="header-anchor" href="#commandes-helm" aria-label="Permalink to &quot;Commandes Helm&quot;">​</a></h2><p>Helm s&#39;utilise via une CLI pour gérer les charts et les releases.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">helm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [command] [chart] [flags]</span></span></code></pre></div><table><thead><tr><th>Attribut</th><th>Description</th></tr></thead><tbody><tr><td><strong>command</strong></td><td>Action à effectuer (install, upgrade, list, delete)</td></tr><tr><td><strong>chart</strong></td><td>Nom du chart à gérer</td></tr><tr><td><strong>flags</strong></td><td>Options supplémentaires pour personnaliser l&#39;action (-f pour spécifier un fichier values, --namespace pour choisir un namespace spécifique)</td></tr></tbody></table><h3 id="exemples-de-commandes-helm" tabindex="-1">Exemples de commandes Helm <a class="header-anchor" href="#exemples-de-commandes-helm" aria-label="Permalink to &quot;Exemples de commandes Helm&quot;">​</a></h3><table><thead><tr><th>Commande</th><th>Description</th></tr></thead><tbody><tr><td><code>helm create my-chart</code></td><td>Créer un nouveau chart.</td></tr><tr><td><code>helm repo add stable https://charts.helm.sh/stable</code></td><td>Ajouter un repository Helm</td></tr><tr><td><code>helm search repo stable</code></td><td>Rechercher des charts dans le repository stable</td></tr><tr><td><code>helm install my-release stable/mysql</code></td><td>Installer un chart avec un nom de release spécifique</td></tr><tr><td><code>helm uninstall my-release</code></td><td>Supprimer une release spécifique</td></tr><tr><td><code>helm upgrade my-release stable/mysql</code></td><td>Mettre à jour une release existante avec la dernière version du chart</td></tr><tr><td><code>helm list</code></td><td>Lister toutes les releases dans le cluster actuel</td></tr><tr><td><code>helm delete my-release</code></td><td>Supprimer une release spécifique du cluster</td></tr><tr><td><code>helm template my-chart</code></td><td>Générer des fichiers manifestes à partir d&#39;un chart sans les installer</td></tr><tr><td><code>helm ls --all</code></td><td>Afficher la liste des Charts</td></tr><tr><td><code>helm rollback my-release</code></td><td>Revenir à une version précédente d&#39;une release</td></tr><tr><td><code>helm package .</code></td><td>Créer un package d&#39;un chart</td></tr></tbody></table>`,42);function y(F,b,v,C,E,f){const s=a("KubernetesIcon");return d(),i("div",null,[e("h1",m,[r(s,{icon:"/clusters/learning/kubernetes/icons/helm.svg",label:"Helm",width:45,height:45}),n(),k]),g])}const q=t(u,[["render",y]]);export{_ as __pageData,q as default};
