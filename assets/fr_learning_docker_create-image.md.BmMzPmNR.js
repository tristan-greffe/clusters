import{_ as e,c as a,o as i,a1 as s}from"./chunks/framework.BL94qm72.js";const u=JSON.parse('{"title":"Créer une image","description":"","frontmatter":{},"headers":[],"relativePath":"fr/learning/docker/create-image.md","filePath":"fr/learning/docker/create-image.md"}'),t={name:"fr/learning/docker/create-image.md"},r=s(`<h1 id="creer-une-image" tabindex="-1">Créer une image <a class="header-anchor" href="#creer-une-image" aria-label="Permalink to &quot;Créer une image&quot;">​</a></h1><p>Pour créer une image, il suffit de créer un fichier <code>Dockerfile</code> dans un dossier et d&#39;exécuter la commande <code>docker build</code> dans ce dossier.</p><h2 id="dockerfile" tabindex="-1">Dockerfile <a class="header-anchor" href="#dockerfile" aria-label="Permalink to &quot;Dockerfile&quot;">​</a></h2><table><thead><tr><th>Mot-clef</th><th>Utilisation</th></tr></thead><tbody><tr><td><code>FROM</code></td><td>Choisir l&#39;image de base (e.g., <code>FROM ubuntu:latest</code>)</td></tr><tr><td><code>RUN</code></td><td>Exécuter une commande bash (e.g., <code>RUN apt-get update</code>)</td></tr><tr><td><code>ADD</code></td><td>Copier un fichier depuis la machine hôte vers l&#39;image</td></tr><tr><td><code>WORKDIR</code></td><td>Changer le dossier courant</td></tr><tr><td><code>EXPOSE</code></td><td>Exposer un port du conteneur</td></tr><tr><td><code>CMD</code></td><td>Spécifier la commande exécutée au démarrage</td></tr><tr><td><code>ENTRYPOINT</code></td><td>Définir le point d&#39;entrée du conteneur</td></tr><tr><td><code>ENV</code></td><td>Définir des variables d&#39;environnement</td></tr><tr><td><code>VOLUME</code></td><td>Créer des points de montage</td></tr><tr><td><code>LABEL</code></td><td>Ajouter des métadonnées à l&#39;image</td></tr></tbody></table><h2 id="creer-et-partager-une-image" tabindex="-1">Créer et partager une image <a class="header-anchor" href="#creer-et-partager-une-image" aria-label="Permalink to &quot;Créer et partager une image&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Créer l&#39;image</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> image</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my_image:latest</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Sauvegarder l&#39;image dans une archive</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> image</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> save</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --output</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my_docker_image.tar</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my_image</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Charger une image depuis une archive</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> image</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> load</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --input</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my_docker_image.tar</span></span></code></pre></div><p>Pour héberger une image sur DockerHub :</p><ol><li>Créez un compte DockerHub et connectez-vous avec <code>docker login</code>.</li><li>Créez une image avec un nom en deux parties : <code>username/imagename:tag</code>.</li><li>Poussez l&#39;image vers DockerHub :</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> image</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> username/imagename:tag</span></span></code></pre></div>`,9),n=[r];function d(l,o,c,h,p,k){return i(),a("div",null,n)}const m=e(t,[["render",d]]);export{u as __pageData,m as default};
