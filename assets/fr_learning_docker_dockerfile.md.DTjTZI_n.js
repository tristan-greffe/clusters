import{_ as e,c as s,o as i,a1 as a,a3 as t}from"./chunks/framework.CgL1aY5S.js";const u=JSON.parse('{"title":"Dockerfile","description":"","frontmatter":{},"headers":[],"relativePath":"fr/learning/docker/dockerfile.md","filePath":"fr/learning/docker/dockerfile.md"}'),n={name:"fr/learning/docker/dockerfile.md"},r=a('<h1 id="dockerfile" tabindex="-1">Dockerfile <a class="header-anchor" href="#dockerfile" aria-label="Permalink to &quot;Dockerfile&quot;">​</a></h1><p>Pour créer une image, il suffit de <strong>créer un fichier <a href="https://docs.docker.com/reference/dockerfile/" target="_blank" rel="noreferrer">Dockerfile</a></strong> dans un dossier et d&#39;<strong>exécuter la commande <code>docker build</code></strong> dans ce dossier.</p><p><img src="'+t+`" alt="dockerfile"></p><h2 id="instructions-dockerfile" tabindex="-1">Instructions Dockerfile <a class="header-anchor" href="#instructions-dockerfile" aria-label="Permalink to &quot;Instructions Dockerfile&quot;">​</a></h2><table><thead><tr><th>Instruction</th><th>Description</th></tr></thead><tbody><tr><td><code>FROM</code></td><td>Choisir l&#39;image de base (e.g., <code>FROM ubuntu:latest</code>)</td></tr><tr><td><code>RUN</code></td><td>Exécuter une commande bash (e.g., <code>RUN apt-get update</code>)</td></tr><tr><td><code>ADD</code></td><td>Copier un fichier depuis la machine hôte vers l&#39;image</td></tr><tr><td><code>WORKDIR</code></td><td>Changer le dossier courant</td></tr><tr><td><code>EXPOSE</code></td><td>Exposer un port du conteneur</td></tr><tr><td><code>CMD</code></td><td>Spécifier la commande exécutée au démarrage</td></tr><tr><td><code>ENTRYPOINT</code></td><td>Définir le point d&#39;entrée du conteneur</td></tr><tr><td><code>ENV</code></td><td>Définir des variables d&#39;environnement</td></tr><tr><td><code>VOLUME</code></td><td>Créer des points de montage</td></tr><tr><td><code>LABEL</code></td><td>Ajouter des métadonnées à l&#39;image</td></tr></tbody></table><h2 id="commandes-essentielles" tabindex="-1">Commandes essentielles <a class="header-anchor" href="#commandes-essentielles" aria-label="Permalink to &quot;Commandes essentielles&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Créer l&#39;image</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> image</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my_image:latest</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Sauvegarder l&#39;image dans une archive</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> image</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> save</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --output</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my_docker_image.tar</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my_image</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Charger une image depuis une archive</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> image</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> load</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --input</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my_docker_image.tar</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Poussez l&#39;image vers DockerHub</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> image</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> username/my_image:tag</span></span></code></pre></div>`,7),d=[r];function l(o,c,h,k,p,g){return i(),s("div",null,d)}const F=e(n,[["render",l]]);export{u as __pageData,F as default};
