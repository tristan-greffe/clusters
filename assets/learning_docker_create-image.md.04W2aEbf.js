import{_ as a,c as e,o as t,a1 as i}from"./chunks/framework.BL94qm72.js";const m=JSON.parse('{"title":"Creating an image","description":"","frontmatter":{},"headers":[],"relativePath":"learning/docker/create-image.md","filePath":"learning/docker/create-image.md"}'),s={name:"learning/docker/create-image.md"},n=i(`<h1 id="creating-an-image" tabindex="-1">Creating an image <a class="header-anchor" href="#creating-an-image" aria-label="Permalink to &quot;Creating an image&quot;">​</a></h1><p>To create an image, you simply need to create a <code>Dockerfile</code> in a directory and execute the <code>docker build</code> command in that directory.</p><h2 id="dockerfile" tabindex="-1">Dockerfile <a class="header-anchor" href="#dockerfile" aria-label="Permalink to &quot;Dockerfile&quot;">​</a></h2><table><thead><tr><th>Keyword</th><th>Usage</th></tr></thead><tbody><tr><td><code>FROM</code></td><td>Choose the base image (e.g., <code>FROM ubuntu:latest</code>)</td></tr><tr><td><code>RUN</code></td><td>Execute a bash command (e.g., <code>RUN apt-get update</code>)</td></tr><tr><td><code>ADD</code></td><td>Copy a file from the host machine to the image</td></tr><tr><td><code>WORKDIR</code></td><td>Change the current directory</td></tr><tr><td><code>EXPOSE</code></td><td>Expose a container port</td></tr><tr><td><code>CMD</code></td><td>Specify the command to run at startup</td></tr><tr><td><code>ENTRYPOINT</code></td><td>Define the container entry point</td></tr><tr><td><code>ENV</code></td><td>Set environment variables</td></tr><tr><td><code>VOLUME</code></td><td>Create mount points</td></tr><tr><td><code>LABEL</code></td><td>Add metadata to the image</td></tr></tbody></table><h2 id="create-share-an-image" tabindex="-1">Create &amp; share an image <a class="header-anchor" href="#create-share-an-image" aria-label="Permalink to &quot;Create &amp; share an image&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Build the image</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> image</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my_image:latest</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Save the image to an archive</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> image</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> save</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --output</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my_docker_image.tar</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my_image</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Load an image from an archive</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> image</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> load</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --input</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my_docker_image.tar</span></span></code></pre></div><p>To host an image on DockerHub:</p><ol><li>Create a DockerHub account and log in with <code>docker login</code>.</li><li>Create an image with a two-part name: <code>username/imagename:tag</code>.</li><li>Push the image to DockerHub:</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> image</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> username/imagename:tag</span></span></code></pre></div>`,9),d=[n];function r(h,o,l,c,p,k){return t(),e("div",null,d)}const F=a(s,[["render",r]]);export{m as __pageData,F as default};
