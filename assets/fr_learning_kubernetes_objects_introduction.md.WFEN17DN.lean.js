import{_ as l,D as i,c as r,j as e,I as n,a as s,o}from"./chunks/framework.CgL1aY5S.js";const ie=JSON.parse('{"title":"Les objets Kubernetes","description":"","frontmatter":{},"headers":[],"relativePath":"fr/learning/kubernetes/objects/introduction.md","filePath":"fr/learning/kubernetes/objects/introduction.md"}'),u={name:"fr/learning/kubernetes/objects/introduction.md"},c=e("h1",{id:"les-objets-kubernetes",tabindex:"-1"},[s("Les objets Kubernetes "),e("a",{class:"header-anchor",href:"#les-objets-kubernetes","aria-label":'Permalink to "Les objets Kubernetes"'},"​")],-1),d=e("h3",{id:"",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#","aria-label":'Permalink to ""'},"​")],-1),a={id:"-1",tabindex:"-1"},h=e("a",{class:"header-anchor",href:"#-1","aria-label":`Permalink to "<KubernetesIcon icon='/clusters/learning/kubernetes/icons/control-plane.svg' label='Control Plane' :width='45' :height='45' />"`},"​",-1),g=e("thead",null,[e("tr",null,[e("th",null,"Nom"),e("th",null,"Description")])],-1),b=e("td",null,"Facilite la communication avec l'extérieur d'un cluster Kubernetes et permet aux utilisateurs d'interagir avec Kubernetes en fournissant une interface d'API.",-1),p=e("td",null,"Surveille l'état des nodes dans un cluster Kubernetes. Il détecte, répare et maintient le bon nombre de nodes.",-1),m=e("td",null,"Système de base de données clé/valeur utilisé comme mémoire de sauvegarde pour un cluster. Stocke les éléments de configuration et l'état de chaque node et pod.",-1),_=e("td",null,"Gère la répartition des pods sur les nodes disponibles du cluster en visant une répartition homogène. Il détermine où exécuter les pods en fonction des ressources disponibles et des exigences de l'application.",-1),v=e("td",null,"Gère l'interaction entre Kubernetes et le cloud provider (OVH, AWS, etc.). Il communique avec l'API du cloud provider pour provisionner, surveiller et gérer les ressources spécifiques au cloud.",-1),k={id:"-2",tabindex:"-1"},f=e("a",{class:"header-anchor",href:"#-2","aria-label":`Permalink to "<KubernetesIcon icon='/clusters/learning/kubernetes/icons/node.svg' label='Worker Node' :width='45' :height='45' />"`},"​",-1),w=e("thead",null,[e("tr",null,[e("th",null,"Nom"),e("th",null,"Description")])],-1),P=e("td",null,"Agent qui facilite la communication entre les nodes (worker nodes) et le control plane (master node) dans un cluster. Il surveille la santé des pods et exécute des actions telles que le redémarrage d'un pod en cas de défaillance.",-1),q=e("td",null,"Machine physique sur laquelle sont installés tous les logiciels nécessaires au fonctionnement d'un cluster. Il exécute des pods et fournit les ressources nécessaires pour exécuter les charges de travail.",-1),x=e("td",null,"Gère l'accès au réseau Kubernetes pour faciliter la communication entre les pods ainsi qu'avec l’extérieur du cluster. Il assure le routage du trafic réseau vers les bons pods en fonction des règles définies.",-1),j=e("h2",{id:"resources",tabindex:"-1"},[s("Resources "),e("a",{class:"header-anchor",href:"#resources","aria-label":'Permalink to "Resources"'},"​")],-1),y=e("thead",null,[e("tr",null,[e("th",null,"Nom"),e("th",null,"Description")])],-1),I=e("td",null,"Représente un ensemble de containers en cours d'exécution sur votre cluster.",-1),S=e("td",null,"Représente une tâche ponctuelle qui est exécutée jusqu'à son achèvement.",-1),K=e("td",null,"Abstraction qui définit un ensemble logique de Pods et une politique permettant d'y accéder. Les Services permettent de faire évoluer les Pods et d'offrir une découverte de services et un équilibrage de charge.",-1),V=e("td",null,"Permet de gérer des applications sur votre cluster, en mettant à jour et à l'échelle des ensembles de répliques de pods.",-1),A=e("td",null,"Abstraction de stockage, qui peut contenir les données des containers et survivre aux redémarrages et aux arrêts des containers.",-1),C=e("td",null,"Permet de créer des Jobs sur la base d'un planning.",-1),D=e("td",null,"Permet de diviser un cluster en plusieurs clusters virtuels.",-1),N=e("td",null,"Permet de gérer des applications avec état, comme des bases de données, en maintenant l'identité et l'état de chaque Pod.",-1),R=e("td",null,"Garantit qu'une copie spécifique d'un Pod est en cours d'exécution sur tous les / certains nodes d'un cluster.",-1),L=e("td",null,"Permet d'exposer des services HTTP ou HTTPS à l'extérieur d'un cluster.",-1),G=e("td",null,"Garantit la disponibilité d'un nombre spécifié de copies (réplicas) d'un Pod dans un cluster.",-1),T=e("td",null,"Demande d'utilisation de stockage PV. Il utilise la spécification de stockage demandée pour trouver un PV approprié et le lier. Une fois lié, le PV est réservé pour le PVC et ne peut pas être lié à d'autres PVC.",-1),B=e("td",null,"Objet qui contient une petite quantité de données sensibles telles qu'un mot de passe, un token d'accès ou une clé privée.",-1),O=e("td",null,"Ajuste automatiquement le nombre de Pods dans un Deployment ou un ReplicaSet en fonction de l'utilisation des ressources.",-1),H=e("td",null,"Stockage qui a été provisionné par un administrateur ou dynamiquement provisionnée à l'aide de Storage Classes. Tout comme une Node, il est indépendant du cycle de vie des Pods qui l'utilisent.",-1),W=e("td",null,"Utilisé pour définir les classes de stockage offertes dans le cluster. Elle fait abstraction du fournisseur de stockage sous-jacent (par exemple AWS, Google Cloud, Azure, OVH etc).",-1),$=e("td",null,"Objets qui permettent de stocker des configurations pour d'autres objets. Elles fournissent notamment un moyen d'injecter des informations de configuration dans les Pods.",-1),E=e("td",null,"Limite les ressources (CPU, mémoire, etc.) qu'un namespace peut utiliser pour éviter les abus de ressources.",-1),U=e("td",null,"Détermine comment les Pods communiquent entre eux et avec d'autres ressources réseau, permettant un contrôle de la sécurité réseau.",-1),z=e("td",null,"Représente les adresses IP et les ports d'un service, aidant à diriger le trafic réseau.",-1),J=e("td",null,"Définit des permissions d'accès au niveau du cluster.",-1),M=e("td",null,"Lie un clusterRole à un utilisateur ou à un groupe au niveau du cluster.",-1),F=e("td",null,"Définit des permissions d'accès au niveau du namespace.",-1),Q=e("td",null,"Lie un rôle à un utilisateur ou à un groupe au niveau du namespace.",-1);function X(Y,Z,ee,te,ne,se){const t=i("KubernetesIcon");return o(),r("div",null,[c,d,e("h2",a,[n(t,{icon:"/clusters/learning/kubernetes/icons/control-plane.svg",label:"Control Plane",width:45,height:45}),s(),h]),e("table",null,[g,e("tbody",null,[e("tr",null,[e("td",null,[n(t,{icon:"/clusters/learning/kubernetes/icons/api.svg",label:"kube-apiserver",width:35,height:35})]),b]),e("tr",null,[e("td",null,[n(t,{icon:"/clusters/learning/kubernetes/icons/c-m.svg",label:"kube-controller-manager",width:35,height:35})]),p]),e("tr",null,[e("td",null,[n(t,{icon:"/clusters/learning/kubernetes/icons/etcd.svg",label:"etcd",width:35,height:35})]),m]),e("tr",null,[e("td",null,[n(t,{icon:"/clusters/learning/kubernetes/icons/sched.svg",label:"kube-scheduler",width:35,height:35})]),_]),e("tr",null,[e("td",null,[n(t,{icon:"/clusters/learning/kubernetes/icons/c-c-m.svg",label:"cloud-controller-manager",width:35,height:35})]),v])])]),e("h2",k,[n(t,{icon:"/clusters/learning/kubernetes/icons/node.svg",label:"Worker Node",width:45,height:45}),s(),f]),e("table",null,[w,e("tbody",null,[e("tr",null,[e("td",null,[n(t,{icon:"/clusters/learning/kubernetes/icons/kubelet.svg",label:"kubelet",width:35,height:35})]),P]),e("tr",null,[e("td",null,[n(t,{icon:"/clusters/learning/kubernetes/icons/node.svg",label:"node",width:35,height:35})]),q]),e("tr",null,[e("td",null,[n(t,{icon:"/clusters/learning/kubernetes/icons/k-proxy.svg",label:"kube-proxy",width:35,height:35})]),x])])]),j,e("table",null,[y,e("tbody",null,[e("tr",null,[e("td",null,[n(t,{icon:"/clusters/learning/kubernetes/icons/pod.svg",label:"pod",width:35,height:35})]),I]),e("tr",null,[e("td",null,[n(t,{icon:"/clusters/learning/kubernetes/icons/job.svg",label:"job",width:35,height:35})]),S]),e("tr",null,[e("td",null,[n(t,{icon:"/clusters/learning/kubernetes/icons/svc.svg",label:"service (svc)",width:35,height:35})]),K]),e("tr",null,[e("td",null,[n(t,{icon:"/clusters/learning/kubernetes/icons/deploy.svg",label:"deployment",width:35,height:35})]),V]),e("tr",null,[e("td",null,[n(t,{icon:"/clusters/learning/kubernetes/icons/vol.svg",label:"volume (vol)",width:35,height:35})]),A]),e("tr",null,[e("td",null,[n(t,{icon:"/clusters/learning/kubernetes/icons/cronjob.svg",label:"cronjob",width:35,height:35})]),C]),e("tr",null,[e("td",null,[n(t,{icon:"/clusters/learning/kubernetes/icons/ns.svg",label:"namespace (ns)",width:35,height:35})]),D]),e("tr",null,[e("td",null,[n(t,{icon:"/clusters/learning/kubernetes/icons/sts.svg",label:"statefulSet (sts)",width:35,height:35})]),N]),e("tr",null,[e("td",null,[n(t,{icon:"/clusters/learning/kubernetes/icons/ds.svg",label:"daemonSet (ds)",width:35,height:35})]),R]),e("tr",null,[e("td",null,[n(t,{icon:"/clusters/learning/kubernetes/icons/ing.svg",label:"ingress (ing)",width:35,height:35})]),L]),e("tr",null,[e("td",null,[n(t,{icon:"/clusters/learning/kubernetes/icons/rs.svg",label:"replicaSet (rs)",width:35,height:35})]),G]),e("tr",null,[e("td",null,[n(t,{icon:"/clusters/learning/kubernetes/icons/pvc.svg",label:"persistentVolumeClaim (pvc)",width:35,height:35})]),T]),e("tr",null,[e("td",null,[n(t,{icon:"/clusters/learning/kubernetes/icons/secret.svg",label:"secret",width:35,height:35})]),B]),e("tr",null,[e("td",null,[n(t,{icon:"/clusters/learning/kubernetes/icons/hpa.svg",label:"horizontalPodAutoscaler (hpa)",width:35,height:35})]),O]),e("tr",null,[e("td",null,[n(t,{icon:"/clusters/learning/kubernetes/icons/pv.svg",label:"persistentVolume (pv)",width:35,height:35})]),H]),e("tr",null,[e("td",null,[n(t,{icon:"/clusters/learning/kubernetes/icons/sc.svg",label:"storageClass (sc)",width:35,height:35})]),W]),e("tr",null,[e("td",null,[n(t,{icon:"/clusters/learning/kubernetes/icons/cm.svg",label:"configMaps (cm)",width:35,height:35})]),$]),e("tr",null,[e("td",null,[n(t,{icon:"/clusters/learning/kubernetes/icons/quota.svg",label:"resourceQuota (quota)",width:35,height:35})]),E]),e("tr",null,[e("td",null,[n(t,{icon:"/clusters/learning/kubernetes/icons/netpol.svg",label:"networkPolicy (netpol)",width:35,height:35})]),U]),e("tr",null,[e("td",null,[n(t,{icon:"/clusters/learning/kubernetes/icons/ep.svg",label:"endpoint (ep)",width:35,height:35})]),z]),e("tr",null,[e("td",null,[n(t,{icon:"/clusters/learning/kubernetes/icons/c-role.svg",label:"clusterRole (c-role)",width:35,height:35})]),J]),e("tr",null,[e("td",null,[n(t,{icon:"/clusters/learning/kubernetes/icons/crb.svg",label:"clusterRoleBinding (crb)",width:35,height:35})]),M]),e("tr",null,[e("td",null,[n(t,{icon:"/clusters/learning/kubernetes/icons/role.svg",label:"role",width:35,height:35})]),F]),e("tr",null,[e("td",null,[n(t,{icon:"/clusters/learning/kubernetes/icons/rb.svg",label:"roleBinding (rb)",width:35,height:35})]),Q])])])])}const re=l(u,[["render",X]]);export{ie as __pageData,re as default};
