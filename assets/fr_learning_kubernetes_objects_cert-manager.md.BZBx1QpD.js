import{_ as r,D as s,c as n,j as e,I as o,a as i,a1 as a,o as c,am as l,an as d}from"./chunks/framework.CgL1aY5S.js";const S=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"fr/learning/kubernetes/objects/cert-manager.md","filePath":"fr/learning/kubernetes/objects/cert-manager.md"}'),u={name:"fr/learning/kubernetes/objects/cert-manager.md"},g={id:"",tabindex:"-1"},p=e("a",{class:"header-anchor",href:"#","aria-label":`Permalink to "<KubernetesIcon icon='/clusters/learning/kubernetes/icons/cert-manager.png' label='cert-manager' :width='45' :height='45' />"`},"​",-1),m=a('<p><a href="https://cert-manager.io/" target="_blank" rel="noreferrer">cert-manager</a> est un outil Kubernetes qui facilite la <strong>gestion des certificats en automatisant leur création, leur renouvellement et leur délivrance aux clients pour sécuriser les connexions HTTPS</strong>.</p><p><img src="'+l+'" alt="cert-manager"></p><div class="tip custom-block"><p class="custom-block-title">Issuers</p><p>Les Issuers sont les <strong>entités responsables de l&#39;émission et de la gestion des certificats</strong>. Ils peuvent être configurés pour travailler avec différentes autorités de certification (CA) comme Let&#39;s Encrypt ou d&#39;autres CA internes.</p></div><h2 id="processus-d-integration" tabindex="-1">Processus d&#39;intégration <a class="header-anchor" href="#processus-d-integration" aria-label="Permalink to &quot;Processus d&#39;intégration&quot;">​</a></h2><p><img src="'+d+'" alt="cert-manager-process"></p><ol><li><strong>Lier <code>cert-manager</code> à <code>Ingress</code></strong> : Configurer <code>Ingress</code> pour utiliser <code>cert-manager</code> pour gérer les certificats SSL/TLS.</li><li><strong>Création du <code>ClusterIssuer</code></strong> : Définir un <code>ClusterIssuer</code> qui interagit avec Let&#39;s Encrypt via le protocole ACME pour automatiser l&#39;émission et le renouvellement des certificats.</li><li><strong>Demande de certificat</strong> : Envoyer une demande de création, de renouvellement ou de suppression de certificat à Let&#39;s Encrypt via l&#39;endpoint ACME.</li><li><strong>Validation du défi (challenge)</strong> : <code>cert-manager</code> utilise l&#39;objet <code>ClusterIssuer</code> pour configurer un défi DNS ou HTTP. Let&#39;s Encrypt vérifiera la propriété du domaine via ce défi.</li><li><strong>Obtention du certificat</strong> : Une fois le défi réussi, Let&#39;s Encrypt délivre le certificat au serveur.</li><li><strong>Création de l&#39;objet <code>Certificate</code></strong> : <code>cert-manager</code> crée un objet <code>Certificate</code> dans Kubernetes, contenant les caractéristiques du certificat, y compris les informations de renouvellement et la durée de validité.</li><li><strong>Stockage dans un <code>Secret</code></strong> : La paire de clés privée et publique, ainsi que le certificat, sont stockés dans un <code>Secret</code> Kubernetes.</li><li><strong>Utilisation du certificat par <code>Ingress</code></strong> : Le certificat et la clé privée sont référencés par l&#39;<code>Ingress</code> pour sécuriser les connexions via HTTPS.</li></ol>',6);function f(_,b,h,v,I,C){const t=s("KubernetesIcon");return c(),n("div",null,[e("h1",g,[o(t,{icon:"/clusters/learning/kubernetes/icons/cert-manager.png",label:"cert-manager",width:45,height:45}),i(),p]),m])}const T=r(u,[["render",f]]);export{S as __pageData,T as default};
