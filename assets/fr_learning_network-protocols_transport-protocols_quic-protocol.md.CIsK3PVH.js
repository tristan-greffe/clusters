import{_ as e,c as o,o as t,a1 as n}from"./chunks/framework.CgL1aY5S.js";const f=JSON.parse('{"title":"Le protocole QUIC","description":"","frontmatter":{},"headers":[],"relativePath":"fr/learning/network-protocols/transport-protocols/quic-protocol.md","filePath":"fr/learning/network-protocols/transport-protocols/quic-protocol.md"}'),s={name:"fr/learning/network-protocols/transport-protocols/quic-protocol.md"},r=n('<h1 id="le-protocole-quic" tabindex="-1">Le <code>protocole QUIC</code> <a class="header-anchor" href="#le-protocole-quic" aria-label="Permalink to &quot;Le `protocole QUIC`&quot;">​</a></h1><p>Le <code>protocole QUIC</code> (Quick UDP Internet Connections) a été créé par Google puis adopté par l&#39;<a href="https://www.ietf.org/" target="_blank" rel="noreferrer">IETF (Standartisation des protocoles internet)</a> pour standardisation. Il a pour vocation de remplacer le <code>protocole TCP</code> car il offre une <strong>vitesse de transmission supérieure</strong>. QUIC utilise directement le <code>protocole UDP</code> pour ses communications.</p><p>QUIC permet d&#39;<strong>établir une communication bidirectionnelle fiable et chiffrée entre deux machines</strong>.</p><div class="info custom-block"><p class="custom-block-title">Paquet QUIC</p><p>Un paquet QUIC comprend l&#39;en-tête du <code>protocole d&#39;application</code> avec des informations supplémentaires (identification, numéro ACK, etc.) et les données.</p></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Les paquets QUIC <strong>ne sont pas envoyés directement au <code>protocole IP</code></strong>. Ils sont encapsulés dans des datagrammes UDP qui sont ensuite envoyés au <code>protocole IP</code>.</p></div><h2 id="fonctionnement" tabindex="-1">Fonctionnement <a class="header-anchor" href="#fonctionnement" aria-label="Permalink to &quot;Fonctionnement&quot;">​</a></h2><p>Le <code>protocole d&#39;application</code> envoie des données accompagnées d&#39;une en-tête au <code>protocole QUIC</code>. QUIC gère et <strong>transforme ces données en <code>paquets QUIC</code></strong>, qui sont ensuite encapsulés dans des datagrammes UDP. Ces datagrammes UDP sont envoyés au <code>protocole IP</code> pour transmission.</p><p>En résumé, <strong>QUIC utilise UDP uniquement pour le transfert des paquets</strong>, exploitant ainsi la rapidité de UDP tout en ajoutant des fonctionnalités avancées comme la fiabilité et le chiffrement.</p><h2 id="avantages-de-quic" tabindex="-1">Avantages de QUIC <a class="header-anchor" href="#avantages-de-quic" aria-label="Permalink to &quot;Avantages de QUIC&quot;">​</a></h2><ol><li><strong>Vitesse améliorée</strong> : QUIC r<strong>éduit la latence par rapport à TCP</strong> en évitant la lenteur des phases d&#39;établissement de connexion et de gestion des retransmissions.</li><li><strong>Sécurité</strong> : QUIC intègre le chiffrement dès le début, offrant ainsi une <strong>sécurité renforcée pour les communications</strong>.</li><li><strong>Fiabilité</strong> : Malgré l&#39;utilisation de UDP, QUIC <strong>assure une transmission fiable</strong> grâce à des mécanismes internes de gestion des erreurs et des retransmissions.</li><li><strong>Multiplexage</strong> : QUIC permet la <strong>transmission simultanée de plusieurs flux dans une seule connexion</strong>, évitant ainsi les blocages de tête de ligne (head-of-line blocking) typiques de TCP.</li></ol>',10),a=[r];function i(c,l,d,p,u,m){return t(),o("div",null,a)}const h=e(s,[["render",i]]);export{f as __pageData,h as default};
